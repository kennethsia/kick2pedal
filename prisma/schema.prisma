generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  createdAt     DateTime     @default(now()) @map(name: "created_at")
  updatedAt     DateTime     @updatedAt @map(name: "updated_at")
  registrations Registration[]
  @@map(name: "users")
}

model Event {
  id            String       @id @default(cuid())
  title         String
  description   String?
  date          DateTime
  location      String
  maxCapacity   Int?
  createdAt     DateTime     @default(now()) @map(name: "created_at")
  updatedAt     DateTime     @updatedAt @map(name: "updated_at")
  registrations Registration[]
  @@map(name: "events")
}

model Registration {
  id            String       @id @default(cuid())
  userId        String       @map(name: "user_id")
  eventId       String       @map(name: "event_id")
  status        String       @default("PENDING") // Can be PENDING, CONFIRMED, CANCELLED
  registeredAt  DateTime     @default(now()) @map(name: "registered_at")
  updatedAt     DateTime     @updatedAt @map(name: "updated_at")
  user          User         @relation(fields: [userId], references: [id])
  event         Event        @relation(fields: [eventId], references: [id])

  @@unique([userId, eventId])
  @@map(name: "registrations")
}